rndefine("#RNMainListField",["#RNMainCore/EventManager","#RNMainFormBuilderCore/FieldBase.Options","lit","#RNMainFormBuilderCore/FieldWithPrice.Model","lit/decorators","#RNMainFormBuilderCore/FieldBase","#RNMainFormBuilderCore/FieldWithPrice","lit/directives/repeat.js","#RNMainLit/Lit","#RNMainCore/StoreBase","#RNMainFormBuilderCore/FieldWithPrice.Options","#RNMainFormBuilderCore/RunnableComparatorBase","#RNMainFormBuilderCore/ConditionBase.Options","#RNMainCore/Sanitizer"],(function(e,t,i,s,r,n,l,o,a,u,d,p,m,h){"use strict";class c{constructor(e){this.Columns=e,this.Id=++c._lastId,this.total={Quantity:0,Price:0,RegularPrice:0}}}c._lastId=0;class C extends s.FieldWithPriceModel{constructor(e,t){super(e,t),this.Options=e}GetDynamicFieldNames(){return["FBList"]}CreateRow(e=[]){return this.Options.EnableMultipleColumns?new c(this.Options.Columns.map(((t,i)=>e.length>i?e[i]:""))):new c([e.length>0?e[0]:""])}GetStoresInformation(){return!0}GetValue(){let e;e=[];for(let t of this.Rows)t.Columns.some((e=>""!=e.trim()))&&e.push(t);return e}InternalSerialize(e){super.InternalSerialize(e),e.Value=this.GetValue(),e.Columns=this.Options.Columns.map((e=>e.ToObject()))}GetIsUsed(){return!!super.GetIsUsed()&&this.GetValue().length>0}RecreateRow(){this.Rows=[this.CreateRow()],this.Refresh()}InitializeStartingValues(e){let t=this.GetPreviousDataProperty("Value",[]),i=[];if(0==t.length)i=[this.CreateRow()];else for(let e of t)i.push(this.CreateRow(e.Columns));this.Rows=i}render(){return i.html`<rn-list-field .model="${this}"></rn-list-field>`}}var f={};!function(e){Object.defineProperty(e,"__esModule",{value:!0});var t="plus-circle",i=[],s="f055",r="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zm144 276c0 6.6-5.4 12-12 12h-92v92c0 6.6-5.4 12-12 12h-56c-6.6 0-12-5.4-12-12v-92h-92c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h92v-92c0-6.6 5.4-12 12-12h56c6.6 0 12 5.4 12 12v92h92c6.6 0 12 5.4 12 12v56z";e.definition={prefix:"fas",iconName:t,icon:[512,512,i,s,r]},e.faPlusCircle=e.definition,e.prefix="fas",e.iconName=t,e.width=512,e.height=512,e.ligatures=i,e.unicode=s,e.svgPathData=r}(f);var R,y={};!function(e){Object.defineProperty(e,"__esModule",{value:!0});var t="minus-circle",i=[],s="f056",r="M256 8C119 8 8 119 8 256s111 248 248 248 248-111 248-248S393 8 256 8zM124 296c-6.6 0-12-5.4-12-12v-56c0-6.6 5.4-12 12-12h264c6.6 0 12 5.4 12 12v56c0 6.6-5.4 12-12 12H124z";e.definition={prefix:"fas",iconName:t,icon:[512,512,i,s,r]},e.faMinusCircle=e.definition,e.prefix="fas",e.iconName=t,e.width=512,e.height=512,e.ligatures=i,e.unicode=s,e.svgPathData=r}(y);let w=r.customElement("rn-list-field")(R=class extends l.FieldWithPrice{static get properties(){return n.FieldBase.properties}SubRender(){return i.html` <div style="width:100%"> <table class='rnListContainer' style="width:100%;border-collapse:collapse"> ${a.rnIf(this.model.Options.EnableMultipleColumns&&this.model.Options.Columns.some((e=>""!=e.Name.trim()))&&i.html` <thead> <tr> ${o.repeat(this.model.Options.Columns,(e=>e.Id),((e,t)=>i.html` <th class=${t==this.model.Options.Columns.length-1?"last":""} style="text-align: left;vertical-align: top;">${e.Name}</th> `))} </tr> </thead> `)} <tbody> ${this.GenerateRows()} </tbody> </table> </div> `}GenerateRows(){return o.repeat(this.model.Rows,(e=>e.Id),(e=>i.html` <tr> ${o.repeat(e.Columns,((e,t)=>t),((t,s)=>i.html` <td class=${s==e.Columns.length-1?"last":""} > <input .readonly=${this.model.IsReadonly} type='text' style="width: 100%" .value=${t} @change=${t=>this.ListValueChanged(e,s,t.target.value)}/> </td> `))} ${a.rnIf(!this.model.IsReadonly&&i.html` <td style="vertical-align: middle;width:40px"> <div style="display: flex" class='rnButtonContainer'> <span @click=${()=>this.CreateRowAt(e)}> <rn-fontawesome class="rnRemove" style="margin-right: 5px;font-size: 18px" .icon=${f.faPlusCircle}/> </span> ${a.rnIf(this.model.Rows.length>1&&i.html` <span @click=${()=>this.RemoveRow(e)}> <rn-fontawesome class="rnAdd" style="font-size: 18px" .icon=${y.faMinusCircle}/> </span> `)} </div> </td> `)} </tr> `))}CreateRowAt(e){let t=this.model.Rows.slice(0);t.splice(t.indexOf(e)+1,0,this.model.CreateRow()),this.model.Rows=t,this.model.FireValueChanged()}RemoveRow(e){let t=this.model.Rows.slice(0);t.splice(t.indexOf(e),1),this.model.Rows=t,this.model.Refresh()}ListValueChanged(e,t,i){e.Columns[t]=i,this.forceUpdate(),this.model.FireValueChanged()}})||R;var b,g,v,M,F,x;let O=(b=u.StoreAutoIncrement("ListItemColumn"),g=class extends u.StoreBase{constructor(...e){super(...e),babelHelpers.initializerDefineProperty(this,"Id",v,this)}LoadDefaultValues(){this.Id=0,this.Name=""}},v=babelHelpers.applyDecoratedDescriptor(g.prototype,"Id",[b],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),g),I=(M=u.StoreDataType(O),F=class extends d.FieldWithPriceOptions{constructor(...e){super(...e),babelHelpers.initializerDefineProperty(this,"Columns",x,this)}LoadDefaultValues(){super.LoadDefaultValues(),this.Label="List",this.EnableMultipleColumns=!1,this.Type=t.FieldTypeEnum.List,this.Columns=[]}},x=babelHelpers.applyDecoratedDescriptor(F.prototype,"Columns",[M],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),F);class L extends p.RunnableComparatorBase{InternalCompare(e,t){let i=this.GetValue(e,t);if(!Array.isArray(i))return!1;let s=h.Sanitizer.SanitizeString(e.Value),r=[];switch(i.forEach((e=>r.push(...e.Columns.map((e=>e.toLowerCase()))))),s=s.toLowerCase(),e.Comparison){case m.ComparisonTypeEnum.Equal:return r.indexOf(s)>=0;case m.ComparisonTypeEnum.NotEqual:return r.indexOf(s)<0;case m.ComparisonTypeEnum.IsEmpty:return 0==r.length;case m.ComparisonTypeEnum.IsNotEmpty:return 0!=r.length;case m.ComparisonTypeEnum.Contains:return r.some((e=>e.indexOf(s)>=0));case m.ComparisonTypeEnum.NotContains:return!r.some((e=>e.indexOf(s)>=0))}}}e.EventManager.Subscribe("GetRunnableComparator",(e=>{if("List"==e.SubType)return new L(e.Container)})),exports.ListFieldModel=C,exports.ListField=w,exports.ListFieldOptions=I,exports.ListItem=c,exports.ListColumnOptions=O,e.EventManager.Subscribe("GetFieldOptions",(e=>{if(e==t.FieldTypeEnum.List)return new I})),e.EventManager.Subscribe("GetFieldModel",(e=>{if(e.Options.Type==t.FieldTypeEnum.List)return new C(e.Options,e.Parent)}))}));
