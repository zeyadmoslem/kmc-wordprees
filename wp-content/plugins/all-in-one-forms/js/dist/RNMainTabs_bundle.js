rndefine("#RNMainTabs",["#RNMainCore/LitElementBase","lit/decorators","lit","#RNMainLit/Lit"],(function(t,e,s,n){"use strict";var i;let r=e.customElement("rn-tabs")(i=class extends t.LitElementBase{constructor(...t){super(...t),this.tabs=[],this.selectedTab="",this.contentStyles=null,this.padding=10}static get properties(){return{selectedTab:{type:String},tabs:{type:Array},contentStyles:{type:String},padding:{type:Number}}}render(){var t;return s.html` <div class="rnTabs" style="${this.contentStyles};display: flex;flex-direction: column;"> <ul style="margin: 0"> ${this.tabs.map((t=>s.html` <li @click="${e=>this.dispatchEvent(new CustomEvent("tabChanged",{detail:t.Id}))}" class="${s.rncg({rnTabItem:!0,rnActive:this.selectedTab==t.Id})}"> ${n.rnIf(null!=t.Icon&&s.html`<rn-fontawesome .icon=${t.Icon}></rn-fontawesome>`)} ${t.Title}</li> `))} </ul> <div class="rnTabContent" style="border-radius:0 0 5px 5px;padding: ${this.padding}px;flex-grow: 1;overflow: auto;"> ${null===(t=this.tabs.find((t=>t.Id==this.selectedTab)))||void 0===t?void 0:t.content} </div> </div> `}})||i;exports.RNTabs=r,exports.RNTabItem=class{constructor(t,e,s,n){this.Id=t,this.Title=e,this.Icon=s,this.content=n}render(){return s.html` <h1>test</h1> `}}}));
