rndefine("#RNMainTextAreaField",["#RNMainCore/EventManager","#RNMainFormBuilderCore/FieldBase.Options","#RNMainFormBuilderCore/FieldWithPrice.Model","lit","lit/decorators","#RNMainFormBuilderCore/FieldBase","#RNMainFormBuilderCore/IconDirective","#RNMainFormBuilderCore/FieldWithPrice","lit-html/directives/live.js","#RNMainCore/StoreBase","#RNMainFormBuilderCore/FieldWithPrice.Options","#RNMainFormBuilderCore/FormBuilder.Options"],(function(e,t,r,i,s,l,a,n,o,d,u,h){"use strict";class c extends r.FieldWithPriceModel{constructor(e,t){super(e,t),this.IsFocused=!1}GetStoresInformation(){return!0}GetIsUsed(){return!!super.GetIsUsed()&&""!=this.Text.trim()}ToText(){return this.Text}InternalToText(){return this.Text}GetValue(){return this.GetIsVisible()?this.Text:""}InternalSerialize(e){super.InternalSerialize(e),e.Value=this.GetValue()}InitializeStartingValues(){this.Text=this.GetPreviousDataProperty("Value",this.Options.DefaultText)}GetDynamicFieldNames(){return["FBTextArea"]}SetText(e){this.Text=e,""!=this.Text.trim()&&this.RemoveError("required"),this.FireValueChanged()}render(){return i.html`<rn-text-area-field .model="${this}"></rn-text-area-field>`}}var p;let x=s.customElement("rn-text-area-field")(p=class extends n.FieldWithPrice{static get properties(){return l.FieldBase.properties}SubRender(){return i.html` <div style="position: relative;"> <textarea ${a.IconDirective(this.model.Options.Icon)} ?readOnly=${this.model.IsReadonly} @focus=${()=>{this.model.IsFocused=!0,this.model.Refresh()}} @blur=${()=>{this.model.IsFocused=!1,this.model.Refresh()}} class='rnInputPrice' placeholder=${this.model.Options.Placeholder} style="width: 100%;" .value=${o.live(this.model.ToText())} @change=${e=>this.OnChange(e)}></textarea> </div> `}OnChange(e){this.model.SetText(e.target.value)}})||p;var F,m,T;let I=(F=d.StoreDataType(Object),m=class extends u.FieldWithPriceOptions{constructor(...e){super(...e),this.FreeCharOrWords=0,babelHelpers.initializerDefineProperty(this,"Icon",T,this)}LoadDefaultValues(){super.LoadDefaultValues(),this.IgnoreSpaces=!1,this.Type=t.FieldTypeEnum.TextArea,this.Label="Text area",this.Placeholder="",this.DefaultText="",this.FreeCharOrWords=0,this.Icon=(new h.IconOptions).Merge()}},T=babelHelpers.applyDecoratedDescriptor(m.prototype,"Icon",[F],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),m);exports.TextAreaFieldModel=c,exports.TextAreaField=x,exports.TextAreaFieldOptions=I,e.EventManager.Subscribe("GetFieldOptions",(e=>{if(e==t.FieldTypeEnum.TextArea)return new I})),e.EventManager.Subscribe("GetFieldModel",(e=>{if(e.Options.Type==t.FieldTypeEnum.TextArea)return new c(e.Options,e.Parent)}))}));
