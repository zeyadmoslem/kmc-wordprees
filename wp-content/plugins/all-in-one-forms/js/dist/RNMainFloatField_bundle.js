rndefine("#RNMainFloatField",["#RNMainCore/EventManager","#RNMainFormBuilderCore/FieldBase.Options","#RNMainFormBuilderCore/FieldWithPrice.Model","#RNMainFormBuilderCore/FBRow.Model","lit","#RNMainFormBuilderCore/FieldContainerMixin","lit/decorators","#RNMainFormBuilderCore/FieldBase","#RNMainFormBuilderCore/FieldWithPrice","#RNMainLit/Lit","lit/directives/repeat.js","#RNMainCore/StoreBase","#RNMainFormBuilderCore/FieldWithPrice.Options","#RNMainFormBuilderCore/FBRow.Options","#RNMainFormBuilderCore/CalculatorBase"],(function(e,t,i,r,o,n,l,a,s,d,u,h,F,c,p){"use strict";class f extends(n.FieldContainerMixin(i.FieldWithPriceModel)){constructor(e,t){super(e,t),this.Options=e,this.FloatContainer=null,this.CanFloat=!1;for(let t of e.Rows)this.Rows.push(new r.FBRowModel(t,this))}ExecuteFirstCalculation(){this.GetFields().forEach((e=>{if(e.IsFieldWithPrice){null!=e.ExecuteFirstCalculation&&e.ExecuteFirstCalculation();let t=e;t.Calculator.GetDependsOnOtherFields()||t.Calculator.ExecuteAndUpdate(),t.Calculator.GetDependsOnOtherFields()&&t.Calculator.ExecuteAndUpdate()}}))}GetStoresInformation(){return!0}get PreviousData(){return{Fields:this.GetPreviousDataProperty("Value",[])}}CreateSubRow(e){return this.FormBuilder.CreateSubRow(e)}GetValue(){let e=[];for(let t of this.GetFields(!1,!1,!1))t.GetStoresInformation()&&t.GetIsUsed()&&e.push(t.SerializeEntry());return e}InternalSerialize(e){super.InternalSerialize(e),e.Value=this.GetValue()}VerifySize(){if(this.RootFormBuilder.IsDesign||this.RootFormBuilder.IsEntry)return this.CanFloat=!1,void this.Parent.Refresh();this.RootFormBuilder.AdditionalOptions.FormContainerId;let e=this.RootFormBuilder.Instance,t=document.body.clientWidth,i=e.getBoundingClientRect(),r=Number(this.Options.Width);switch(this.Options.Position){case"left":if(i.left+5>=r){this.CanFloat=!0,this.LeftOffset=2,this.RightOffset=0;break}this.CanFloat=!1;break;case"right":if(i.left+i.width+5+r<t){this.CanFloat=!0,this.RightOffset=2,this.LeftOffset=0;break}this.CanFloat=!1}this.Parent.Refresh()}GetIsUsed(){return!!super.GetIsUsed()&&this.GetValue().length>0}GetPrice(){return this.PriceManager.GetGrandTotal()}render(){return this.CanFloat?(null==this.FloatContainer&&(this.FloatContainer=document.createElement("div"),this.FloatContainer.classList.add("rednao","floatPanelContainer"),document.body.append(this.FloatContainer)),this.FloatContainer.style.position="fixed",this.FloatContainer.style.right="2px",this.FloatContainer.style.zIndex="100000000",this.FloatContainer.style.top=this.Options.TopOffset+"px",this.FloatContainer.style.width=this.Options.Width+"px",o.render(o.html`<rn-float-field .model="${this}"></rn-float-field>`,this.FloatContainer),""):(null!=this.FloatContainer&&(this.FloatContainer.remove(),this.FloatContainer=null),o.html`<rn-float-field .model="${this}"></rn-float-field>`)}async Initialize(){return this.RootFormBuilder.OnLoad.Subscribe(this,(()=>this.VerifySize())),window.addEventListener("resize",(()=>this.VerifySize())),this.PriceManager=this.RootFormBuilder.PriceManager,super.Initialize()}InitializeStartingValues(e){}}var C;let m=l.customElement("rn-float-field")(C=class extends s.FieldWithPrice{static get properties(){return a.FieldBase.properties}BeforeSubFieldContainer(){return""}AfterSubFieldContainer(){return""}GetLabel(e="",t=!1){return""}AfterField(){return null}SubRender(){return o.html` <div class='rednaoGroupContainer' @click="${e=>this.Click(e)}"> ${d.rnIf(""!=this.model.Options.Label&&this.model.Rows.length>0&&o.html` <div style="margin-bottom: 5px"> <h3 class='rnTitle'>${this.model.Options.Label}</h3> <hr style="margin: 0;padding: 0;"/> </div> `)} <div class="rnGroupFieldContainer"> ${this.BeforeSubFieldContainer()} ${u.repeat(this.model.Rows,(e=>e.Options.Id),(e=>e.render()))} ${this.AfterSubFieldContainer()} </div> </div> `}Click(e){}})||C;var R,b,B;let O=(R=h.StoreDataType(c.FBRowOptions),b=class extends F.FieldWithPriceOptions{constructor(...e){super(...e),babelHelpers.initializerDefineProperty(this,"Rows",B,this)}LoadDefaultValues(){super.LoadDefaultValues(),this.Label="List",this.Type=t.FieldTypeEnum.FloatPanel,this.PriceType="float",this.ShowSubTotal=!1,this.SubTotalLabel="Subtotal",this.Rows=[],this.IsFieldContainer=!0,this.Position="right",this.Width="300",this.TopOffset=2}},B=babelHelpers.applyDecoratedDescriptor(b.prototype,"Rows",[R],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),b);class M extends p.CalculatorBase{ExecuteCalculation(e,t){return{RegularPrice:0,Quantity:0}}}exports.FloatFieldModel=f,exports.FloatField=m,exports.FloatFieldOptions=O,e.EventManager.Subscribe("GetFieldOptions",(e=>{if(e==t.FieldTypeEnum.FloatPanel)return new O})),e.EventManager.Subscribe("GetFieldModel",(e=>{if(e.Options.Type==t.FieldTypeEnum.FloatPanel)return new f(e.Options,e.Parent)})),e.EventManager.Subscribe("GetCalculator",(e=>{if("float"==e)return new M}))}));
