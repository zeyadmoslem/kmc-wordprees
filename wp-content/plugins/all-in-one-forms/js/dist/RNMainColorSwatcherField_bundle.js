rndefine("#RNMainColorSwatcherField",["#RNMainCore/EventManager","#RNMainFormBuilderCore/FieldBase.Options","lit/decorators","lit","#RNMainFormBuilderCore/FieldBase","#RNMainFormBuilderCore/FieldWithPrice","#RNMainLit/Lit","#RNMainFormBuilderCore/MultipleOptionsBase.Model","#RNMainCore/StoreBase","#RNMainFormBuilderCore/MultipleOptionsBase.Options","#RNMainFormBuilderCore/ItemOptions.Options","#RNMainFormBuilderCore/FieldWithPrice.Options"],(function(e,t,l,i,r,o,s,n,a,d,p,c){"use strict";var u;let h=l.customElement("rn-color-swatcher-field")(u=class extends o.FieldWithPrice{static get properties(){return r.FieldBase.properties}SubRender(){return i.html` <div> <div class='rnColorSwatcherContainer' style="display: flex"> ${this.model.OptionItemsToUse.map((e=>i.html` <div style="pointer-events: ${this.model.IsReadonly?"none":"auto"}" class=${"rnColorSwatcherItem "+(this.model.SelectedValues.some((t=>t==e.Id))?"rnSelected":"")} @click=${t=>this.ToggleSelected(e)}> <div class='RNPreset'> <div style="background-color: ${e.Color}"> </div> </div> ${s.rnIf(""!=e.Label.trim()&&i.html`<label>${e.Label.trim()}</label>`)} </div> `))} </div> </div> `}ToggleSelected(e){this.model.ToggleSelection(e.Id)}})||u;class m extends n.MultipleOptionsBaseModel{constructor(e,t){super(e,t),this.Options=e}get AllowMultiple(){return null!=this.Options&&this.Options.AllowMultipleSelection}render(){return i.html`<rn-color-swatcher-field .model="${this}"></rn-color-swatcher-field>`}}var F,M,C;class b extends p.ItemOptions{LoadDefaultValues(){super.LoadDefaultValues(),this.Label="",this.Color=""}}let w=(F=a.StoreDataType(b),M=class extends d.MultipleOptionsBaseOptions{constructor(...e){super(...e),babelHelpers.initializerDefineProperty(this,"Options",C,this)}LoadDefaultValues(){super.LoadDefaultValues(),this.Type=t.FieldTypeEnum.ColorSwatcher,this.Label="Color Swatcher",this.PriceType=c.PriceTypeEnum.none,this.AllowMultipleSelection=!1,this.Options=[(new b).Merge({Id:1,RegularPrice:"",Label:"Black",Color:"#000000"}),(new b).Merge({Id:2,RegularPrice:"",Label:"Red",Color:"#FF0000"}),(new b).Merge({Id:3,RegularPrice:"",Label:"White",Color:"#FFFFFF"})]}},C=babelHelpers.applyDecoratedDescriptor(M.prototype,"Options",[F],{configurable:!0,enumerable:!0,writable:!0,initializer:null}),M);exports.ColorSwatcherField=h,exports.ColorSwatcherFieldModel=m,exports.ColorSwatcherFieldOptions=w,e.EventManager.Subscribe("GetFieldOptions",(e=>{if(e==t.FieldTypeEnum.ColorSwatcher)return new w})),e.EventManager.Subscribe("GetFieldModel",(e=>{if(e.Options.Type==t.FieldTypeEnum.ColorSwatcher)return new m(e.Options,e.Parent)}))}));
